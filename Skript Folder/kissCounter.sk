#made to be used with MarriageMaster plugin
#keeps track of marriages, divorces and kisses per player
variables:
	#enables or disables the 1% chance of "haha kissless virgin!" appearing when runing /kissCounter
	#disabled by default | change 0 to 1 to enable
	{taunt} = 0

# kissCounter ----------------------------------------------------------------------
on command "/marry kiss":
	add 1 to {counter::%player%::kiss}


command /kissCounter [<player>]:
	trigger:
		if arg-1 is set:
			if {counter::%player%::kiss} is set:
				send "&eThe kiss count of %arg-1% is %{counter::%arg-1%::kiss}% kisses!" to player
			else:
				send "&e%arg-1% hasn't kissed anyone yet!"
			
		else:
			
			if {counter::%player%::kiss} is set:
				send "&eYour kiss count is %{counter::%player%::kiss}% kisses!" to player
			else:
				send "&eYou haven't kissed anyone yet!"
				if {taunt} is 1:
					chance of 1%:
						send "&7haha kissless virgin!"
			
# MarriageCounter ------------------------------------------------------------------
command /playermarried [<player>]: #place this command inside of OnMarry:[] in the marriageMaster config file | this command shouldnt be used by players
	trigger:
		if arg-1 is set:
			add 1 to {counter::%arg-1%::marriage}
		else:
			add 1 to {counter::%player%::marriage}

command /marriageCounter [<player>]:
	trigger:
		if arg-1 is set:
			if {counter::%arg-1%::marriage} is set:
				send "&e%arg-1% has been married %{counter::%arg-1%::marriage}% time(s)!" to player
			else:
				send "&e%arg-1% hasn't been married yet!"
		else:
			if {counter::%player%::marriage} is set:
				send "&eYou have been married %{counter::%player%::marriage}% time(s)!" to player
			else:
				send "&eYou haven't married anyone yet!"

# divorceCounter ------------------------------------------------------------------
command /playerdivorced [<player>]: #place this command inside of OnDivorce:[] in the marriageMaster config file
	trigger:
		if arg-1 is set:
			add 1 to {counter::%arg-1%::divorce}
		else:
			add 1 to {counter::%player%::divorce}

command /divorceCounter [<player>]:
	trigger:
		if arg-1 is set:
			if {counter::%arg-1%::divorce} is set:
				send "&e%arg-1% has been divorced %{counter::%arg-1%::divorce}% time(s)!" to player
			else:
				send "&e%arg-1% hasn't been divorced yet!"
		else:
			if {counter::%player%::divorce} is set:
				send "&eYou have been divorced %{counter::%player%::divorce}% time(s)!" to player
			else:
				send "&eYou haven't divorced anyone yet!"